#include <Arduino.h> //Required for Visual Studio Code
#include "SCD40Sensor.h"
#include "AS7265xModule.h"
#include "SparkFun_AS7265X.h"

#include <Wire.h> //Include the I2C library
#include <Adafruit_SleepyDog.h> //Include the watchdog library

#define TEL true  // true para enviar datos a servidor, false para no enviar datos
#define LOCAL false // true para servidor local, false para servidor remoto
#define SENSORID1 false // true para sensor 1, false para sensor 2
#define SCD4 true // true para sensor SCD40
#define AS72 true // true para sensor AS7265X

#if TEL
#include "WifiModule.h"
#include "MqttModule.h"
#include "HttpModule.h"

#endif
//=======================================================================
#if TEL

#if LOCAL
const char *ssid = "Convergentes"; // Nombre de la red WiFi
const char *password = "RedesConvergentes*#"; // Contraseña de la red WiFi
const char* server = "172.16.20.94"; // IP local del servidor MQTT
const char* server2 = "172.16.20.115"; // IP local del servidor HTTP
const int mqtt_port = 1883;
const int http_port = 3000;
#else
const char *ssid = "Familia Morales"; // Nombre de la red WiFi
const char *password = "2205631700"; // Contraseña de la red WiFi
const char* server = "200.122.207.134"; // IP publica del servidor MQTT
const char* server2 = "192.168.1.112"; // IP local del servidor HTTP
const int http_port = 8311;
const int mqtt_port = 8310;
const int mqtt_port2 = 1883;
const int http_port2 = 3000;
#endif

WifiModule wifiModule(ssid, password);
HttpModule httpClient(server, http_port);
HttpModule httpClient2(server2, http_port2);


#endif
//=======================================================================
#if SENSORID1
const char* sensor_id = "650dc7d640e0be7842fc4239"; // ID del sensor SCD40_1
#else
const char* sensor_id = "65391fa4700d51b6d681b3c5"; // ID del sensor SCD40_2
#endif
#if AS72
const char* sensor_id2 = "655dd4a264d0cd6c1628e4b3"; // ID del sensor AS7265X
#endif
#if SCD4

SCD40Sensor SCD40(sensor_id);
#endif
#if AS72
AS7265X sensor;
AS7265xModule AS7265Xmodule(sensor_id2);

#endif
//=======================================================================
const unsigned long interval = 30000; // Intervalo de tiempo en milisegundos (2.5 min)
unsigned long previousMillis = 0;
//=======================================================================
void setup()
{
  Watchdog.enable(400000);
  Serial.begin(115200);
  #if SCD4
  Wire.begin();
  SCD40.begin(Wire);
  #endif
  #if AS72
  Serial.println("AS7265x Example");
  if (sensor.begin() == false)
  {
    Serial.println("No se pudo encontrar el sensor AS7265X");
  }
  else
  {
    Serial.println("Sensor AS7265X encontrado");
  }
  #endif
  //=======================================================================
   #if TEL
  wifiModule.conectarWifi();
  // mqttModule.conectarMQTT();
  #endif
}
void loop()
{
  //=======================================================================

  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval)
  {
    previousMillis = currentMillis;
    #if SCD4
    SCD40.read();
    #endif
    #if AS72
    AS7265Xmodule.Read(sensor);
    #endif
    #if TEL
    #if SCD4
    String jsonString = SCD40.buildJson();
    httpClient.enviarDatosHTTP(jsonString.c_str(), "scd40");
    Serial.println("Enviando datos a servidor externo");
    httpClient2.enviarDatosHTTP(jsonString.c_str(), "scd40");
    Serial.println("Enviando datos a servidor local");
    #endif
    #if AS72
    String jsonString2 = AS7265Xmodule.buildJson();
    httpClient.enviarDatosHTTP(jsonString2.c_str(), "as7265x");
    //httpClient2.enviarDatosHTTP(jsonString2.c_str(), "as7265x");
    #endif
    delay(1000);
    #endif
    Watchdog.reset();
  }
}